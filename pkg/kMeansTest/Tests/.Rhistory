undebug(testORPtimeLim)
k<-3
n<-20
IM<-outer(1:k,1:k)
clu<-sort(rep_len(1:k,length.out = n))
M<-IM[clu,clu]
diag(M)<-100
nRep<-20
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 60,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 60,approach="hom", blocks="com"))
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 1,approach="hom", blocks="com"))
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.1,approach="hom", blocks="com"))
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sKmBlockR<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::kmBlock, timeLim = 60))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
options(error=recover)
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
length(res1)
length(res)
best.clu
i
!any(sapply(best.clu, function(x, clu2) rand2(unlist(x),
clu2), clu2 = unlist(res1[[i]]$clu)) == 1)
unlist(res1[[i]]$clu)
res1[[i]]$clu
res1[[i]]
length(res1)
res1[[2]]
names(res1)
res1
res1
res1[[2]]<-NULL
length(res1)
length(res)
res[[2]]
which(err == min(err, na.rm = TRUE))
library(kmBlock)
library(blockmodelingTest)
k<-3
n<-20
IM<-outer(1:k,1:k)
clu<-sort(rep_len(1:k,length.out = n))
M<-IM[clu,clu]
diag(M)<-100
nRep<-20
tmp<-system.time(test60sKmBlockC<-kmBlock::testORPtimeLim(M, k=k, blockFun = kmBlock::kmBlockC, timeLim = 60))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-1:10
tmp[10]<-NULL
tmp
tmp[-i]
i
<-10
i<-10
tmp[-i]
library(kmBlock)
library(blockmodelingTest)
k<-3
n<-20
IM<-outer(1:k,1:k)
clu<-sort(rep_len(1:k,length.out = n))
M<-IM[clu,clu]
diag(M)<-100
nRep<-20
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.01,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.0000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.0000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.0000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.0000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
library(kmBlock)
library(blockmodelingTest)
k<-3
n<-20
IM<-outer(1:k,1:k)
clu<-sort(rep_len(1:k,length.out = n))
M<-IM[clu,clu]
diag(M)<-100
nRep<-20
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
tmp
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 0.000000000000000000000000001,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
library(kmBlock)
library(blockmodelingTest)
k<-3
n<-20
IM<-outer(1:k,1:k)
clu<-sort(rep_len(1:k,length.out = n))
M<-IM[clu,clu]
diag(M)<-100
nRep<-20
res<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com")
res<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com", useMulti = TRUE)
res<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com", useMulti = TRUE)
res$best$best1$bestRowParMatrix
res$best$best2$bestRowParMatrix
date()
?date()
format(Sys.time(), "%a %b %d %H:%M:%S %Y")
format(Sys.time(), "%a,  %d.%b%Y %H:%M:%S")
format(Sys.time(), "%A, %d.%b%Y %H:%M:%S")
format(Sys.time(), "%A, %d. %b%Y %H:%M:%S")
format(Sys.time(), "%A, %d. %b% Y %H:%M:%S")
format(Sys.time(), "%A, %d. %b %Y %H:%M:%S")
format(Sys.time(), "%A, %D %b %Y %H:%M:%S")
format(Sys.time(), "%A, %d. %B %Y %H:%M:%S")
library(kmBlock)
library(blockmodelingTest)
install.packages("RcppArmadillo")
update.packages("Rcpp")
install.packages(c("Rcpp", "RcppEigen"))
library(kmBlock)
library(blockmodelingTest)
library(blockmodelingTest)
library(kmBlock)
library(blockmodelingTest)
k<-3
n<-20
IM<-outer(1:k,1:k)
clu<-sort(rep_len(1:k,length.out = n))
M<-IM[clu,clu]
diag(M)<-100
nRep<-20
tmp<-system.time(test60sKmBlockC<-kmBlock::testORPtimeLim(M, k=k, blockFun = kmBlock::kmBlockC, timeLim = 5))
attr(test60sKmBlockC,which = "totalTime")<-tmp
test60sKmBlockC$nStarts
tmp<-system.time(test60sKmBlockR<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::kmBlock, timeLim = 5))
attr(test60sKmBlockR,which = "totalTime")<-tmp
test60sKmBlockR$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
homCmoveAndChangeTime<-system.time(res<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com"))
testORPtimeLim
partCanon <- function(P){
n <- length(P); S <- integer(n)
D <- new.env(hash=TRUE,parent=emptyenv())
for(u in 1:n){
key <- as.character(P[u])
if (!exists(key,env=D,inherits=FALSE)) assign(key,length(D)+1,env=D)
S[u] <- get(key,env=D,inherits=FALSE)
}
return(S)
}
partCanon(p<-sample(x = 1:5, size = 100, replace = TRUE))
p
p1<-sample(x = 1:5, size = 100, replace = TRUE)
p2<-sample(x = 1:5, size = 100, replace = TRUE)
install.packages("rbenchmark")
library("rbenchmark")
library(blockmodeling)
p1c<-partCanon(p1)
benchmark(rand={blockmodeling::rand2(p1,p2)==1}, partCanon={all(p1c==partCanon(p2))})
benchmark(rand={blockmodeling::rand2(p1,p2)==1}, partCanon={all(p1c==partCanon(p2))},replications = 10000)
p1<-sample(x = 1:5, size = 1000, replace = TRUE)
p2<-sample(x = 1:5, size = 1000, replace = TRUE)
p1c<-partCanon(p1)
benchmark(rand={blockmodeling::rand2(p1,p2)==1}, partCanon={all(p1c==partCanon(p2))},replications = 10000)
k<-3
n<-20
IM<-outer(1:k,1:k)
clu<-sort(rep_len(1:k,length.out = n))
M<-IM[clu,clu]
diag(M)<-100
?optParC
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com"))
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE))
homCmoveAndChangeTime$err
homCmoveAndChangeRes$err
homCjustMoveTime$err
homCjustMoveRes$err
optRandomParC
optParC
blockmodelingTest::optParC
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveTime$err
homCjustMoveRes$err
set.seed(1)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(1)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed
seed<-sample(1000000,1)
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
M
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M>3,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M>1,k=k,rep=nRep,approach="hom", blocks="com",useMulti=TRUE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M>1,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=TRUE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=FALSE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=FALSE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=FALSE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=FALSE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
seed<-sample(1000000,1)
set.seed(seed)
homCmoveAndChangeTime<-system.time(homCmoveAndChangeRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",useMulti=FALSE))
set.seed(seed)
homCjustMoveTime<-system.time(homCjustMoveRes<-blockmodelingTest::optRandomParC(M,k=k,rep=nRep,approach="hom", blocks="com",justChange=TRUE,useMulti=FALSE))
homCmoveAndChangeRes$err
homCjustMoveRes$err
?Rcpp
library(inline)
install.packages(inline)
install.packages("inline")
install.packages(inline)
library(inline)
code4 <- "
int i;
for (i = 0; i < *n; i++)
x[i] = x[i]*x[i]*x[i];
"
cubefn4 <- cfunction(signature(n="integer", x="numeric"), code4, language = "C", convention = ".C")
cubefn4(20, 1:20)
code4 <- "
if(!justMove && justChange){n=n+1}"
cubefn4 <- cfunction(signature(justChange="integer",justMove="integer", n="integer"), code4, language = "C", convention = ".C")
cubefn4(TRUE, TRUE, 10)
code4 <- "
if(!justMove && justChange){n=n+1;}"
cubefn4 <- cfunction(signature(justChange="integer",justMove="integer", n="integer"), code4, language = "C", convention = ".C")
cubefn4(TRUE, TRUE, 10)
cubefn4(FALSE, TRUE, 10)
?.C
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com"))
library(kmBlock)
library(blockmodelingTest)
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCjustMove<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com",justChange=TRUE))
attr(test60sHomCjustMove,which = "totalTime")<-tmp
test60sHomCjustMove$nStarts
tmp<-system.time(test60sHomCjustMove<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com",justChange=FALSE))
attr(test60sHomCjustMove,which = "totalTime")<-tmp
test60sHomCjustMove$nStarts
tmp<-system.time(test60sHomCjustMove<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com",justChange=FALSE))
attr(test60sHomCjustMove,which = "totalTime")<-tmp
test60sHomCjustMove$nStarts
tmp<-system.time(test60sHomCjustMove<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com",justMove=TRUE))
attr(test60sHomCjustMove,which = "totalTime")<-tmp
test60sHomCjustMove$nStarts
?optParC
tmp<-system.time(test60sHomCmoveAndChangeMulti<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com", useMulti = TRUE))
attr(test60sHomCmoveAndChangeMulti,which = "totalTime")<-tmp
test60sHomCmoveAndChangeMulti$nStarts
tmp<-system.time(test60sHomCjustMoveMulti<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com",justMove=TRUE, useMulti = TRUE))
attr(test60sHomCjustMoveMulti,which = "totalTime")<-tmp
test60sHomCjustMoveMulti$nStarts
k<-5
n<-20
IM<-outer(1:k,1:k)
clu<-sort(rep_len(1:k,length.out = n))
M<-IM[clu,clu]
diag(M)<-100
nRep<-20
tmp<-system.time(test60sKmBlockC<-kmBlock::testORPtimeLim(M, k=k, blockFun = kmBlock::kmBlockC, timeLim = 5))
attr(test60sKmBlockC,which = "totalTime")<-tmp
test60sKmBlockC$nStarts
tmp<-system.time(test60sKmBlockR<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::kmBlock, timeLim = 5))
attr(test60sKmBlockR,which = "totalTime")<-tmp
test60sKmBlockR$nStarts
tmp<-system.time(test60sHomCmoveAndChange<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com"))
attr(test60sHomCmoveAndChange,which = "totalTime")<-tmp
test60sHomCmoveAndChange$nStarts
tmp<-system.time(test60sHomCjustMove<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com",justMove=TRUE))
attr(test60sHomCjustMove,which = "totalTime")<-tmp
test60sHomCjustMove$nStarts
tmp<-system.time(test60sHomCmoveAndChangeMulti<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com", useMulti = TRUE))
attr(test60sHomCmoveAndChangeMulti,which = "totalTime")<-tmp
test60sHomCmoveAndChangeMulti$nStarts
tmp<-system.time(test60sHomCjustMoveMulti<-kmBlock::testORPtimeLim(M, k=k, blockFun = blockmodelingTest::optParC, timeLim = 5,approach="hom", blocks="com",justMove=TRUE, useMulti = TRUE))
attr(test60sHomCjustMoveMulti,which = "totalTime")<-tmp
test60sHomCjustMoveMulti$nStarts
